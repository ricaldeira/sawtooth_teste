    version: '2.1'

    services:
    
      docs-manager-shell:
        build:
          context: .
          dockerfile: ./shell/Dockerfile
        image: sawtooth-simple-supply-shell
        container_name: docs-manager-shell
        volumes:
          - .:/project/docs_manager
         - /project/docs_manager/frontend/node_modules
        command: |
          bash -c "
           simple-supply-protogen
            cd frontedn/
            npm run build
            cd ../
            tail -f /dev/null
          "
    
        docs-manager-tp:
        build:
            context: .
            dockerfile: ./processor/Dockerfile
        image: sawtooth-simple-supply-tp
        container_name: docs-manager-tp
        volumes:
          - '.:/project/docs_manager'
        depends_on:
          - docs-manager-shell
        command: |
          bash -c "
            sleep 1
            docs-manager-tp -v -C tcp://validator:4004
          "
    
      docs-manager-rest-api:
        build:
          context: .
          dockerfile: ./rest_api/Dockerfile
        image: sawtooth-simple-supply-rest-api
        container_name: docs-manager-rest-api
        volumes:
          - .:/project/docs_manager
        ports:
          - '8000:8000'
        depends_on:
          - docs-manager-shell
        command: |
          bash -c "
            docs-manager-rest-api \
              -B docs-manager-rest-api:8000 \
              -C validator:4004 \
              --db-host postgres \
              -vv
          "
    
      docs-manager-subscriber:
        build:
          context: .
          dockerfile: ./subscriber/Dockerfile
        image: sawtooth-simple-supply-subscriber
        container_name: docs-manager-subscriber
        volumes:
          - '.:/project/docs_manager'
        depends_on:
          - docs-manager-shell
          - postgres
        command: |
          bash -c "
            docs-manager-subscriber init \
              --db-host postgres \
              -vv
            sleep 3
            docs-manager-subscriber subscribe \
              --db-host postgres \
              -C tcp://validator:4004 \
              -vv
          "
    
      settings-tp:
        image: hyperledger/sawtooth-settings-tp:1.2
        container_name: sawtooth-settings-tp
        depends_on:
          - validator
        entrypoint: settings-tp -vv -C tcp://validator:4004
    
      rest-api:
        image: hyperledger/sawtooth-rest-api:1.2
        container_name: sawtooth-rest-api
        expose:
          - 8008
        ports:
          - '8008:8008'
        depends_on:
          - validator
        entrypoint: sawtooth-rest-api -vv -C tcp://validator:4004 --bind rest-api:8008
    
      validator:
        image: hyperledger/sawtooth-validator:1.2
        container_name: sawtooth-validator
        expose:
          - 4004
        ports:
          - '4004:4004'
        command: |
          bash -c "
            if [ ! -f /etc/sawtooth/keys/validator.priv ]; then
              sawadm keygen
              sawtooth keygen my_key
              sawset genesis -k /root/.sawtooth/keys/my_key.priv
              sawset proposal create -k /root/.sawtooth/keys/my_key.priv \
                sawtooth.consensus.algorithm.name=Devmode \
                sawtooth.consensus.algorithm.version=0.1 \
                -o config.batch
              sawadm genesis config-genesis.batch config.batch
            fi;
            sawtooth-validator -vv \
              --endpoint tcp://validator:8800 \
              --bind component:tcp://eth0:4004 \
              --bind network:tcp://eth0:8800 \
              --bind consensus:tcp://eth0:5050
           "
    
      devmode-engine:
        image: hyperledger/sawtooth-devmode-engine-rust:1.2
        expose:
          - 5050
        ports:
          - '5050:5050'
        container_name: sawtooth-devmode-engine-rust-default
        depends_on:
          - validator
        entrypoint: devmode-engine-rust --connect tcp://validator:5050
    
      postgres:
        image: postgres:alpine
        container_name: docs-manager-postgres
        restart: always
        environment:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: docs-manager
        ports:
          - '5432:5432'
    
      adminer:
        image: adminer
        container_name: docs-manager-adminer
        restart: always
        ports:
          - '8080:8080'
    
    #   curator-app:
    #     build: ./curator_app
    #     image: simple-supply-curator-app
    #     container_name: curator-app
    #     volumes:
    #       - ./curator_app/public/:/usr/local/apache2/htdocs/
    #     expose:
    #       - 80
    #     ports:
    #       - '8040:80'
    #     depends_on:
    #       - simple-supply-shell
    #       - simple-supply-rest-api
    